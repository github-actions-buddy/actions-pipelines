name: Pipeline PR Body

# Workflow run name
run-name: Workflow run PR No - ${{ github.event.pull_request.number }} and PR title - ${{ github.event.pull_request.title }} by @${{ github.actor }}

# Workflow triggers
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - develop
    paths-ignore:
      - "**/README.md"
#Jobs Test
jobs:
  pr_body:
    runs-on: ubuntu-latest
    environment: DEV-CI
    # Only executes next steps if Source branch name starts with feature or defect
    if: ((github.event_name == 'pull_request'))
    steps:
      # Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # - name: Install dotenv
      #   run: |
      #     npm install -g dotenv-cli

      # - name: Load env
      #   run: |
      #     cd ORGS
      #     dotenv -e .env.dev-ci

      # Load specific Variables to this Enviroment
      - name: SFDX Load Dynamic Vars
        id: sfdxDynoVar
        continue-on-error: true
        run: |
          {
            echo 'SF_ENV_FILE<<EOF'
            cat .env.devci
            echo EOF
          } >> "$GITHUB_ENV"
          # sudo -s
          # sed -i '/^declare -x OLDPWD/d' ./.env.devci
          # set -a
          # eval $(dotenv -f ./.env.devci)
          # export >> $GITHUB_ENV
          # set +a
          # echo "source ORGS/.env.DEV-CI" >> "$GITHUB_ENV"

      # - name: Load .env file
      #   uses: xom9ikk/dotenv@v2
      #   with:
      #     path: ./ORGS/
      #     mode: DEV-CI

      - name: print env variables
        shell: bash
        run: |
          echo "Variable 1: ${{env.SF_User}}"
          echo "Variable 2: ${{env.SF_User2}}"
          cat .env.devci

      # # Find unit tests defined in the PR Body version 2
      # - name: Find Unit Tests In Pull Request Body v2
      #   id: regex-match
      #   run: |
      #     echo '${{github.event.pull_request.body}}' > pullRequestBody.txt
      #     python3 ./readPRBody.py -s pullRequestBody.txt
      # # Print ENV PR_TESTS
      # - name: Echo PR_TESTS
      #   run: echo ${{env.PR_TESTS}}