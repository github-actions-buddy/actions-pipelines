name: Pipeline SF Validation CI

# Workflow run name
run-name: Workflow run PR No - ${{ github.event.pull_request.number }} and PR title - ${{ github.event.pull_request.title }} by @${{ github.actor }}

# Workflow triggers
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - develop
    paths-ignore:
      - "**/README.md"

# Environment Variables
env:
  GIT_USER_NAME: github
  GIT_USER_EMAIL: githubactions@altice.com
  PR_NUMBER: ${{ github.event.number }}

jobs:
  installation_authenticate_validate:
    runs-on: ubuntu-latest
    environment: DEV-CI
    # Only executes next steps if Source branch name starts with develop
    if: ((startswith(github.head_ref,'feature') || startswith(github.head_ref,'defect')) && (github.event_name == 'pull_request'))
    steps:
      # Create a PR comment thread
      - name: Create PR comment Thread
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{github.event.pull_request.number}}
          body: |
            ![Altice_Logo](https://play-lh.googleusercontent.com/ld9BbSXJcTilPGb_uQCrgxI9ZvtORR8jh45yoBxwuyq8vDZDKYQZozUrKZz0xGSODw=w240-h480-rw)
            ## **Starting build #[${{github.run_number}}][1]**
            ------
            [1]: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      # Find comments in PR
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: ${{github.event_name == 'pull_request'}}
        id: lastComment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          direction: last

      # Set PullRequest Status
      - name: Set PR Status
        if: ${{github.event_name == 'pull_request'}}
        uses: teamniteo/pull_request_status_action@v1.0.0
        with:
          pr_number: ${{github.event.pull_request.number}}
          state: success
          repository: ${{ github.repository }}
          context: Build ${{github.run_number}}
          description: "Build #${{github.run_number}} Started. "
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Save PR number in PR_RUN text file
      - name: Save the PR number
        if: ${{github.event_name == 'pull_request'}}
        shell: bash
        env:
          PR_NUM: ${{ github.event.number }}
        run: |
          echo $PR_NUM > pr_num.txt

      # Upload PR number
      - name: Upload Artifact PR number
        if: ${{github.event_name == 'pull_request'}}
        uses: actions/upload-artifact@v3
        with:
          name: pr_num
          path: ./pr_num.txt
          retention-days: 1

      # Save source branch of PR
      - name: Save the source branch of Pull request
        if: ${{github.event_name == 'pull_request'}}
        shell: bash
        env:
          BRANCH_NAME: ${{ github.head_ref }}
        run: |
          echo $BRANCH_NAME > branch_name.txt

      # Upload the source branch of Pull request
      - name: Upload Artifact source branch of Pull request
        if: ${{github.event_name == 'pull_request'}}
        uses: actions/upload-artifact@v3
        with:
          name: branch_name
          path: ./branch_name.txt
          retention-days: 1

      # Checkout the current repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Install required OS packages
      # - name: Install OS dependencies
      #   run: |
      #     sudo apt-get clean -y
      #     sudo apt-get update -y
      #     sudo apt --only-upgrade install -y zip
      #     sudo apt --only-upgrade install -y curl
      #     sudo apt --only-upgrade install -y wget
      #     sudo apt install openjdk-8-jdk -y
      #     sudo apt --only-upgrade install jq -y
      #     sudo apt --only-upgrade install grep -y
      #     sudo apt autoremove -y

      # Setup python v3.7
      # - uses: actions/setup-python@v4
      #   name: Install Python v3.7 and cache pip
      #   with:
      #     python-version: "3.7"
      #     cache: "pip" # caching pip dependencies
      #     cache-dependency-path: ./acct-scripts/requirements.txt

      # Checking out repo before installing Node
      - uses: actions/checkout@v3
        name: Checkout Repository

      # Setup Node v18
      # - uses: actions/setup-node@v3
      #   name: Install Node v18
      #   with:
      #     node-version: "18"

      # Install the SFDX-CLI
      # - name: Install SFDX-CLI
      #   run: |
      #     wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
      #     mkdir ~/sfdx && ls -la
      #     tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
      #     echo "$HOME/sfdx/bin" >> $GITHUB_PATH
      #     echo The PATH is $GITHUB_PATH
      #     ~/sfdx/bin/sfdx version

      # Install SF CLI V2
      - name: Install SF CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sf/channels/stable/sf-linux-x64.tar.xz
          mkdir ~/cli/sf && ls -la
          tar xJf sf-linux-x64.tar.xz -C ~/cli/sf --strip-components 1
          echo "$HOME/sf/bin" >> $GITHUB_PATH
          echo The PATH is $GITHUB_PATH
          ~/sf/bin/sf version

      # Install SF CLI V2
      - name: NPM Install SF CLI
        run: |
          node --version
          npm install @salesforce/cli --global

      # Verify
      - name: Verify Installation
        run: |
          sf --version
          sf commands
          sf whatsnew
